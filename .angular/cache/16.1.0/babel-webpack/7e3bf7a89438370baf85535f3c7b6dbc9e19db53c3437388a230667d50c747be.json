{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, map } from 'rxjs';\nimport { PasswordStrengthEnum } from 'src/app/enums/password-strength-enum';\nconst weakRegex = /^([a-zA-Z]+|[!@#$%^&*]+|[0-9]+)$/;\nconst mediumRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^&*])|(?=.*[a-zA-Z])(?=.*[0-9])|(?=.*[0-9])(?=.*[!@#$%^&*])+.*$/;\nconst strongRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^&*])(?=.*[0-9])+.*$/;\nexport let PasswordComponent = class PasswordComponent {\n  constructor() {\n    this.sectionsLength = 3;\n    this.inputType$ = new BehaviorSubject('password');\n    this.buttonText$ = this.inputType$.pipe(map(type => type === 'password' ? 'Show' : 'Hide'));\n    this.sections$ = [];\n  }\n  ngOnInit() {\n    this.sections$ = Array.from({\n      length: this.sectionsLength\n    }, () => new BehaviorSubject(PasswordStrengthEnum[PasswordStrengthEnum.default]));\n  }\n  onPasswordChange(event) {\n    const strength = this.calculatePasswordStrength(event.target.value);\n    this.sections$.forEach(x => {\n      x.next(PasswordStrengthEnum.default);\n    });\n    switch (strength) {\n      case PasswordStrengthEnum.short:\n        this.sections$.forEach(x => {\n          x.next(PasswordStrengthEnum[PasswordStrengthEnum.weak]);\n        });\n        break;\n      case PasswordStrengthEnum.weak:\n        this.sections$[0].next(PasswordStrengthEnum[PasswordStrengthEnum.weak]);\n        break;\n      case PasswordStrengthEnum.medium:\n        this.sections$[0].next(PasswordStrengthEnum[PasswordStrengthEnum.medium]);\n        this.sections$[1].next(PasswordStrengthEnum[PasswordStrengthEnum.medium]);\n        break;\n      case PasswordStrengthEnum.strong:\n        this.sections$.forEach(x => {\n          x.next(PasswordStrengthEnum[PasswordStrengthEnum.strong]);\n        });\n        break;\n      default:\n        break;\n    }\n  }\n  calculatePasswordStrength(password) {\n    if (password == null || password.length === 0) return PasswordStrengthEnum.default;\n    if (password.length < 8) return PasswordStrengthEnum.short;\n    if (weakRegex.test(password)) return PasswordStrengthEnum.weak;\n    if (mediumRegex.test(password)) return PasswordStrengthEnum.medium;\n    if (strongRegex.test(password)) return PasswordStrengthEnum.strong;\n    return PasswordStrengthEnum.default;\n  }\n  toggleInputType() {\n    const currentType = this.inputType$.getValue();\n    const newType = currentType === 'password' ? 'text' : 'password';\n    this.inputType$.next(newType);\n  }\n};\nPasswordComponent = __decorate([Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss']\n})], PasswordComponent);","map":{"version":3,"names":["Component","BehaviorSubject","map","PasswordStrengthEnum","weakRegex","mediumRegex","strongRegex","PasswordComponent","constructor","sectionsLength","inputType$","buttonText$","pipe","type","sections$","ngOnInit","Array","from","length","default","onPasswordChange","event","strength","calculatePasswordStrength","target","value","forEach","x","next","short","weak","medium","strong","password","test","toggleInputType","currentType","getValue","newType","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\projects\\PasswordCheck\\src\\app\\components\\password\\password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BehaviorSubject, map } from 'rxjs';\nimport { PasswordStrengthEnum } from 'src/app/enums/password-strength-enum';\n\nconst weakRegex = /^([a-zA-Z]+|[!@#$%^&*]+|[0-9]+)$/;\nconst mediumRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^&*])|(?=.*[a-zA-Z])(?=.*[0-9])|(?=.*[0-9])(?=.*[!@#$%^&*])+.*$/;\nconst strongRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^&*])(?=.*[0-9])+.*$/;\n\n@Component({\n    selector: 'app-password',\n    templateUrl: './password.component.html',\n    styleUrls: ['./password.component.scss']\n})\n\nexport class PasswordComponent {\n    sectionsLength = 3;\n    inputType$ = new BehaviorSubject<string>('password');\n    buttonText$ = this.inputType$.pipe(map(type => (type === 'password' ? 'Show' : 'Hide')));\n    sections$: BehaviorSubject<string>[] = [];\n\n    ngOnInit() {\n        this.sections$ = Array.from({ length: this.sectionsLength }, () => new BehaviorSubject<string>(PasswordStrengthEnum[PasswordStrengthEnum.default]));\n    }\n\n    onPasswordChange(event: any) {\n        const strength = this.calculatePasswordStrength(event!.target.value);\n        this.sections$.forEach(x => {\n            x.next(PasswordStrengthEnum.default);\n        });\n\n        switch(strength) {\n            case PasswordStrengthEnum.short:\n                this.sections$.forEach(x => {\n                    x.next(PasswordStrengthEnum[PasswordStrengthEnum.weak]);\n                });\n                break;\n            case PasswordStrengthEnum.weak:\n                this.sections$[0].next(PasswordStrengthEnum[PasswordStrengthEnum.weak]);\n                break;\n            case PasswordStrengthEnum.medium:\n                this.sections$[0].next(PasswordStrengthEnum[PasswordStrengthEnum.medium]);\n                this.sections$[1].next(PasswordStrengthEnum[PasswordStrengthEnum.medium]);\n                break;\n            case PasswordStrengthEnum.strong:\n                this.sections$.forEach(x => {\n                    x.next(PasswordStrengthEnum[PasswordStrengthEnum.strong]);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    \n    calculatePasswordStrength(password: string): PasswordStrengthEnum {\n        if (password == null || password.length === 0)\n            return PasswordStrengthEnum.default;\n\n        if (password.length < 8)\n            return PasswordStrengthEnum.short;\n\n        if (weakRegex.test(password))\n            return PasswordStrengthEnum.weak;\n        \n        if (mediumRegex.test(password))\n            return PasswordStrengthEnum.medium;\n\n        if (strongRegex.test(password))\n            return PasswordStrengthEnum.strong;\n\n        return PasswordStrengthEnum.default;\n    }\n    \n\n    toggleInputType():void {\n        const currentType = this.inputType$.getValue();\n        const newType = currentType === 'password' ? 'text' : 'password';\n        this.inputType$.next(newType);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}